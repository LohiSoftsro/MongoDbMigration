<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MongoDB Migration Tool</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-color: #4361ee;
            --primary-hover: #3a56d4;
            --secondary-color: #4cc9f0;
            --accent-color: #f72585;
            --success-color: #06d6a0;
            --warning-color: #ffd166;
            --danger-color: #ef476f;
            --light-color: #f8f9fa;
            --dark-color: #212529;
            --gray-color: #6c757d;
            --border-radius: 12px;
            --box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
            --transition: all 0.3s ease;
        }
        
        body {
            background-color: #f5f7ff;
            padding-top: 30px;
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            color: var(--dark-color);
        }
        
        .container {
            max-width: 1000px;
        }
        
        h1 {
            font-weight: 700;
            margin-bottom: 1.5rem;
            color: var(--primary-color);
            font-size: 2.5rem;
        }
        
        h5 {
            font-weight: 600;
            color: var(--dark-color);
        }
        
        .card {
            border: none;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            margin-bottom: 25px;
            overflow: hidden;
            transition: var(--transition);
        }
        
        .card:hover {
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
            transform: translateY(-5px);
        }
        
        .card-header {
            background-color: white;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
            padding: 20px 25px;
        }
        
        .card-body {
            padding: 25px;
            background-color: white;
        }
        
        .form-control {
            border-radius: 10px;
            padding: 12px 15px;
            border: 1px solid #e0e0e0;
            background-color: #f9fafc;
            transition: var(--transition);
        }
        
        .form-control:focus {
            border-color: var(--primary-color);
            background-color: white;
            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.15);
        }
        
        .form-label {
            font-weight: 500;
            margin-bottom: 8px;
        }
        
        .form-text {
            color: var(--gray-color);
        }
        
        .form-check-input:checked {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }
        
        .btn {
            border-radius: 10px;
            padding: 12px 24px;
            font-weight: 600;
            transition: var(--transition);
            border: none;
        }
        
        .btn-primary {
            background-color: var(--primary-color);
            color: white;
        }
        
        .btn-primary:hover, .btn-primary:focus {
            background-color: var(--primary-hover);
            transform: translateY(-2px);
        }
        
        .btn-primary:disabled {
            background-color: #a8b1ff;
            transform: none;
        }
        
        .btn-secondary {
            background-color: #e9ecef;
            color: var(--dark-color);
        }
        
        .btn-secondary:hover, .btn-secondary:focus {
            background-color: #dee2e6;
            color: var(--dark-color);
            transform: translateY(-2px);
        }
        
        .progress {
            height: 8px;
            border-radius: 4px;
            margin: 15px 0;
            overflow: hidden;
            background-color: #e9ecef;
        }
        
        .progress-bar {
            background-color: var(--primary-color);
            background-image: linear-gradient(45deg, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
            background-size: 1rem 1rem;
        }
        
        .collection-item {
            padding: 15px;
            margin-bottom: 10px;
            border-radius: var(--border-radius);
            background-color: #f9fafc;
            border-left: 4px solid #dee2e6;
            transition: var(--transition);
        }
        
        .collection-item:hover {
            background-color: white;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        }
        
        .collection-item .progress {
            height: 6px;
            margin: 8px 0 0 0;
            background-color: #e9ecef;
        }
        
        .status-badge {
            font-size: 0.7rem;
            padding: 4px 10px;
            border-radius: 20px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .status-starting {
            background-color: var(--secondary-color);
            color: white;
        }
        
        .status-preparing {
            background-color: var(--warning-color);
            color: #664d00;
        }
        
        .status-copying {
            background-color: var(--primary-color);
            color: white;
        }
        
        .status-completed {
            background-color: var(--success-color);
            color: white;
        }
        
        .status-failed {
            background-color: var(--danger-color);
            color: white;
        }
        
        #summary-card {
            display: none;
        }
        
        .icon-large {
            font-size: 4rem;
            margin-bottom: 20px;
        }
        
        .success-icon {
            color: var(--success-color);
        }
        
        .error-icon {
            color: var(--danger-color);
        }
        
        .summary-value {
            font-size: 2rem;
            font-weight: 700;
            color: var(--primary-color);
        }
        
        .summary-label {
            font-size: 0.85rem;
            color: var(--gray-color);
            text-transform: uppercase;
            letter-spacing: 0.5px;
            font-weight: 500;
        }
        
        .alert-info {
            background-color: rgba(76, 201, 240, 0.1);
            border-color: rgba(76, 201, 240, 0.2);
            color: #0c7c99;
        }
        
        #test-results .card {
            box-shadow: none;
            border: 1px solid rgba(0, 0, 0, 0.05);
        }
        
        #test-results .card:hover {
            transform: none;
        }
        
        #test-results .card-header {
            background-color: #f9fafc;
            padding: 15px 20px;
        }
        
        #test-results .card-body {
            padding: 20px;
        }
        
        .text-success {
            color: var(--success-color) !important;
        }
        
        .text-danger {
            color: var(--danger-color) !important;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="text-center mb-5">
                    <h1>MongoDB Migration Tool</h1>
                    <p class="lead text-muted">Simple and efficient tool for migrating MongoDB databases</p>
                </div>
                
                <!-- Connection Form -->
                <div class="card" id="connection-form">
                    <div class="card-header">
                        <h5><i class="bi bi-database me-2"></i>Database Connections</h5>
                    </div>
                    <div class="card-body">
                        <form id="migration-form">
                            <div class="mb-3">
                                <label for="sourceUri" class="form-label"><i class="bi bi-box-arrow-in-right me-1"></i>Source MongoDB Connection String</label>
                                <input type="text" class="form-control" id="sourceUri" placeholder="mongodb://username:password@hostname:port/source_database" required>
                                <div class="form-text">Include the database name in the connection string</div>
                            </div>
                            <div class="mb-3">
                                <label for="targetUri" class="form-label"><i class="bi bi-box-arrow-right me-1"></i>Target MongoDB Connection String</label>
                                <input type="text" class="form-control" id="targetUri" placeholder="mongodb://username:password@hostname:port/target_database" required>
                                <div class="form-text">Include the database name in the connection string</div>
                            </div>
                            <div class="mb-3">
                                <button type="button" id="test-connections-btn" class="btn btn-secondary w-100"><i class="bi bi-shield-check me-2"></i>Test Connections</button>
                            </div>
                            
                            <div id="test-results" class="mb-3" style="display: none;">
                                <div class="card">
                                    <div class="card-header bg-light">
                                        <h6 class="mb-0"><i class="bi bi-clipboard-check me-2"></i>Connection Test Results</h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="d-flex align-items-center mb-2">
                                                    <span id="source-status-icon" class="me-2"></span>
                                                    <strong>Source Database</strong>
                                                </div>
                                                <p id="source-details" class="small text-muted"></p>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="d-flex align-items-center mb-2">
                                                    <span id="target-status-icon" class="me-2"></span>
                                                    <strong>Target Database</strong>
                                                </div>
                                                <p id="target-details" class="small text-muted"></p>
                                            </div>
                                        </div>
                                        <div id="test-error" class="alert alert-danger mt-2" style="display: none;"></div>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label"><i class="bi bi-gear me-1"></i>Migration Mode</label>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="migrationMode" id="mode-complete" value="complete" checked>
                                    <label class="form-check-label" for="mode-complete">
                                        Complete Migration (Drop Existing Collections)
                                        <small class="d-block text-muted">Deletes all existing data in target collections and performs a full migration</small>
                                    </label>
                                </div>
                                <div class="form-check mt-2">
                                    <input class="form-check-input" type="radio" name="migrationMode" id="mode-newOnly" value="newOnly">
                                    <label class="form-check-label" for="mode-newOnly">
                                        New Documents Only
                                        <small class="d-block text-muted">Preserves existing documents and only adds documents that don't exist in the target (based on _id)</small>
                                    </label>
                                </div>
                            </div>
                            
                            <div class="d-grid gap-2">
                                <button type="submit" id="start-migration-btn" class="btn btn-primary" disabled><i class="bi bi-play-fill me-2"></i>Start Migration</button>
                            </div>
                        </form>
                    </div>
                </div>
                
                <!-- Progress Card -->
                <div class="card" id="progress-card" style="display: none;">
                    <div class="card-header">
                        <h5><i class="bi bi-arrow-repeat me-2"></i>Migration Progress</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <h6><i class="bi bi-bar-chart-steps me-2"></i>Overall Progress</h6>
                            <div class="progress">
                                <div id="overall-progress" class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 0%"></div>
                            </div>
                            <p id="status-message" class="text-muted mt-2">Initializing migration...</p>
                        </div>
                        
                        <div class="mb-3">
                            <h6><i class="bi bi-collection me-2"></i>Collections</h6>
                            <div id="collections-container">
                                <!-- Collection items will be added here dynamically -->
                            </div>
                        </div>
                        
                        <div class="d-grid gap-2">
                            <button id="cancel-btn" class="btn btn-secondary"><i class="bi bi-x-circle me-2"></i>Cancel</button>
                        </div>
                    </div>
                </div>
                
                <!-- Summary Card -->
                <div class="card" id="summary-card">
                    <div class="card-header">
                        <h5><i class="bi bi-check-circle me-2"></i>Migration Summary</h5>
                    </div>
                    <div class="card-body text-center">
                        <div id="summary-success" style="display: none;">
                            <i class="bi bi-check-circle-fill icon-large success-icon"></i>
                            <h4 class="mb-4">Migration Completed Successfully</h4>
                        </div>
                        <div id="summary-error" style="display: none;">
                            <i class="bi bi-x-circle-fill icon-large error-icon"></i>
                            <h4 class="mb-4">Migration Failed</h4>
                            <p id="error-message" class="text-danger mb-4"></p>
                        </div>
                        
                        <div class="row" id="summary-stats">
                            <div class="col-6 col-md-3 mb-3">
                                <div class="summary-value" id="total-collections">0</div>
                                <div class="summary-label">Total Collections</div>
                            </div>
                            <div class="col-6 col-md-3 mb-3">
                                <div class="summary-value" id="successful-collections">0</div>
                                <div class="summary-label">Successful</div>
                            </div>
                            <div class="col-6 col-md-3 mb-3">
                                <div class="summary-value" id="failed-collections">0</div>
                                <div class="summary-label">Failed</div>
                            </div>
                            <div class="col-6 col-md-3 mb-3">
                                <div class="summary-value" id="total-documents">0</div>
                                <div class="summary-label" id="documents-label">Documents Migrated</div>
                            </div>
                            <div class="col-12 mt-2" id="total-source-row" style="display: none;">
                                <div class="alert alert-info">
                                    <strong id="total-source-documents">0</strong> new documents were migrated out of <strong id="total-source-documents-count">0</strong> total documents in the source database
                                </div>
                            </div>
                        </div>
                        
                        <div class="d-grid gap-2 mt-3">
                            <button id="new-migration-btn" class="btn btn-primary"><i class="bi bi-plus-circle me-2"></i>Start New Migration</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Elements
            const connectionForm = document.getElementById('connection-form');
            const progressCard = document.getElementById('progress-card');
            const summaryCard = document.getElementById('summary-card');
            const migrationForm = document.getElementById('migration-form');
            const overallProgress = document.getElementById('overall-progress');
            const statusMessage = document.getElementById('status-message');
            const collectionsContainer = document.getElementById('collections-container');
            const cancelBtn = document.getElementById('cancel-btn');
            const newMigrationBtn = document.getElementById('new-migration-btn');
            
            // Summary elements
            const summarySuccess = document.getElementById('summary-success');
            const summaryError = document.getElementById('summary-error');
            const errorMessage = document.getElementById('error-message');
            const totalCollections = document.getElementById('total-collections');
            const successfulCollections = document.getElementById('successful-collections');
            const failedCollections = document.getElementById('failed-collections');
            const totalDocuments = document.getElementById('total-documents');
            
            // Connect to Socket.io
            const socket = io();
            
            // Test connections button
            document.getElementById('test-connections-btn').addEventListener('click', function() {
                const sourceUri = document.getElementById('sourceUri').value;
                const targetUri = document.getElementById('targetUri').value;
                
                if (!sourceUri || !targetUri) {
                    alert('Please enter both source and target connection strings');
                    return;
                }
                
                // Show testing status
                statusMessage.textContent = 'Testing connections...';
                progressCard.style.display = 'block';
                connectionForm.style.display = 'none';
                overallProgress.style.width = '0%';
                collectionsContainer.innerHTML = '';
                
                // Test connections
                socket.emit('testConnections', { sourceUri, targetUri });
                
                // Hide progress card after test is complete
                setTimeout(() => {
                    progressCard.style.display = 'none';
                    connectionForm.style.display = 'block';
                }, 500);
            });
            
            // Form submission
            migrationForm.addEventListener('submit', function(e) {
                e.preventDefault();
                
                const sourceUri = document.getElementById('sourceUri').value;
                const targetUri = document.getElementById('targetUri').value;
                const migrationMode = document.querySelector('input[name="migrationMode"]:checked').value;
                
                // Show progress card
                connectionForm.style.display = 'none';
                progressCard.style.display = 'block';
                collectionsContainer.innerHTML = '';
                
                // Start migration
                socket.emit('startMigration', { sourceUri, targetUri, migrationMode });
            });
            
            // Cancel button
            cancelBtn.addEventListener('click', function() {
                if (confirm('Are you sure you want to cancel the migration?')) {
                    window.location.reload();
                }
            });
            
            // New migration button
            newMigrationBtn.addEventListener('click', function() {
                summaryCard.style.display = 'none';
                connectionForm.style.display = 'block';
            });
            
            // Socket events
            socket.on('status', function(data) {
                statusMessage.textContent = data.message;
                overallProgress.style.width = `${data.progress}%`;
            });
            
            socket.on('collectionProgress', function(data) {
                // Check if collection element already exists
                let collectionEl = document.getElementById(`collection-${data.collection}`);
                
                if (!collectionEl) {
                    // Create new collection element
                    collectionEl = document.createElement('div');
                    collectionEl.id = `collection-${data.collection}`;
                    collectionEl.className = 'collection-item';
                    
                    collectionEl.innerHTML = `
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <span class="fw-bold">${data.collection}</span>
                                <span id="collection-${data.collection}-badge" class="ms-2 badge status-badge status-${data.status}">${data.status}</span>
                            </div>
                            <span id="collection-${data.collection}-progress-text">0%</span>
                        </div>
                        <div class="progress">
                            <div id="collection-${data.collection}-progress" class="progress-bar" role="progressbar" style="width: 0%"></div>
                        </div>
                        <p id="collection-${data.collection}-message" class="text-muted mt-1 small">${data.message}</p>
                    `;
                    
                    collectionsContainer.appendChild(collectionEl);
                } else {
                    // Update existing collection element
                    document.getElementById(`collection-${data.collection}-badge`).className = `ms-2 badge status-badge status-${data.status}`;
                    document.getElementById(`collection-${data.collection}-badge`).textContent = data.status;
                    document.getElementById(`collection-${data.collection}-message`).textContent = data.message;
                }
                
                // Update progress
                document.getElementById(`collection-${data.collection}-progress`).style.width = `${data.progress}%`;
                document.getElementById(`collection-${data.collection}-progress-text`).textContent = `${data.progress}%`;
            });
            
            socket.on('testResult', function(data) {
                document.getElementById('test-results').style.display = 'block';
                
                // Update source status
                const sourceStatusIcon = document.getElementById('source-status-icon');
                const sourceDetails = document.getElementById('source-details');
                
                if (data.source) {
                    sourceStatusIcon.innerHTML = '<i class="bi bi-check-circle-fill text-success"></i>';
                    sourceDetails.innerHTML = `Connected to <strong>${data.sourceDetails.dbName}</strong> (${data.sourceDetails.collections} collections)`;
                } else {
                    sourceStatusIcon.innerHTML = '<i class="bi bi-x-circle-fill text-danger"></i>';
                    sourceDetails.innerHTML = data.errors && data.errors.source ? 
                        `<span class="text-danger">${data.errors.source}</span>` : 
                        '<span class="text-danger">Connection failed</span>';
                }
                
                // Update target status
                const targetStatusIcon = document.getElementById('target-status-icon');
                const targetDetails = document.getElementById('target-details');
                
                if (data.target) {
                    const permissions = data.targetDetails.permissions;
                    const permissionsList = [];
                    
                    if (permissions) {
                        if (permissions.read) permissionsList.push('read');
                        if (permissions.write) permissionsList.push('write');
                        if (permissions.update) permissionsList.push('update');
                        if (permissions.delete) permissionsList.push('delete');
                    }
                    
                    targetStatusIcon.innerHTML = '<i class="bi bi-check-circle-fill text-success"></i>';
                    targetDetails.innerHTML = `Connected to <strong>${data.targetDetails.dbName}</strong> with ${permissionsList.join('/')} permissions`;
                } else {
                    targetStatusIcon.innerHTML = '<i class="bi bi-x-circle-fill text-danger"></i>';
                    targetDetails.innerHTML = data.errors && data.errors.target ? 
                        `<span class="text-danger">${data.errors.target}</span>` : 
                        '<span class="text-danger">Connection failed</span>';
                }
                
                // Show combined errors if any
                const testError = document.getElementById('test-error');
                if (data.errors && (data.errors.source || data.errors.target)) {
                    let errorMsg = '';
                    if (data.errors.source && data.errors.target) {
                        errorMsg = 'Both source and target connections have issues. Please check the connection strings and ensure MongoDB servers are running.';
                    } else if (!data.source && !data.target) {
                        errorMsg = 'Connection test failed for both databases. Please check your connection strings and ensure MongoDB servers are running.';
                    }
                    
                    if (errorMsg) {
                        testError.textContent = errorMsg;
                        testError.style.display = 'block';
                    } else {
                        testError.style.display = 'none';
                    }
                } else {
                    testError.style.display = 'none';
                }
                
                // Enable/disable start migration button
                document.getElementById('start-migration-btn').disabled = !(data.source && data.target);
            });
            
            socket.on('completed', function(data) {
                // Hide progress card
                progressCard.style.display = 'none';
                
                // Show summary card
                summaryCard.style.display = 'block';
                
                if (data.success) {
                    summarySuccess.style.display = 'block';
                    summaryError.style.display = 'none';
                    
                    // Update stats
                    totalCollections.textContent = data.totalCollections || 0;
                    successfulCollections.textContent = data.successfulCollections || 0;
                    failedCollections.textContent = data.failedCollections || 0;
                    
                    // Show different stats based on migration mode
                    if (data.migrationMode === 'newOnly') {
                        document.getElementById('documents-label').textContent = 'New Documents Migrated';
                        document.getElementById('total-source-documents').textContent = data.totalDocuments || 0;
                        document.getElementById('total-source-row').style.display = 'block';
                    } else {
                        document.getElementById('documents-label').textContent = 'Documents Migrated';
                        document.getElementById('total-source-row').style.display = 'none';
                    }
                    
                    totalDocuments.textContent = data.migratedDocuments || 0;
                } else {
                    summarySuccess.style.display = 'none';
                    summaryError.style.display = 'block';
                    errorMessage.textContent = data.error || 'Unknown error occurred';
                    
                    // Hide stats if there was an error
                    document.getElementById('summary-stats').style.display = 'none';
                }
            });
            
            socket.on('error', function(message) {
                alert(`Error: ${message}`);
                
                // Show connection form again
                progressCard.style.display = 'none';
                connectionForm.style.display = 'block';
            });
        });
    </script>
</body>
</html>
